webpackHotUpdate_N_E("pages/statistics",{

/***/ "./shared/statistics/table/CostTableStats.tsx":
/*!****************************************************!*\
  !*** ./shared/statistics/table/CostTableStats.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CostTableStats; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-bootstrap-table-next */ \"./node_modules/react-bootstrap-table-next/lib/index.js\");\n/* harmony import */ var react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-bootstrap-table2-toolkit */ \"./node_modules/react-bootstrap-table2-toolkit/lib/index.js\");\n/* harmony import */ var react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _context_User__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../context/User */ \"./shared/context/User.ts\");\n/* harmony import */ var _styles_module_css__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./styles.module.css */ \"./shared/statistics/table/styles.module.css\");\n/* harmony import */ var _styles_module_css__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_styles_module_css__WEBPACK_IMPORTED_MODULE_13__);\n\n\n\n\n\n\n\n\n\nvar _jsxFileName = \"/home/cedric/datadriven/applications/clients/current/data-driven-recruiters-dashboard/shared/statistics/table/CostTableStats.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar ExportCSVButton = react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_11__[\"CSVExport\"].ExportCSVButton;\n\nvar retrieveAnnonceBetwnTwoDate = function retrieveAnnonceBetwnTwoDate(sd, ed, data) {\n  var i = 0,\n      arr = [],\n      time = 0,\n      sdTime = 0,\n      edTime = 0,\n      notSame = false;\n\n  if (data !== undefined && data.length !== 0) {\n    sdTime = sd instanceof Date ? sd.getTime() : new Date(sd).getTime();\n    edTime = ed instanceof Date ? ed.getTime() : new Date(ed).getTime();\n    notSame = sd.getTime() !== ed.getTime();\n\n    for (i = 0; i < data.length; i++) {\n      time = new Date(data[i][\"DatePublication\"]).getTime();\n\n      if (sdTime <= time && time <= edTime && notSame) {\n        arr.push(data[i]);\n      }\n    }\n  }\n\n  return arr;\n};\n\nvar CostTableStats = /*#__PURE__*/function (_React$PureComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(CostTableStats, _React$PureComponent);\n\n  var _super = _createSuper(CostTableStats);\n\n  function CostTableStats(props) {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, CostTableStats);\n\n    _this = _super.call(this, props);\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_this), \"columns\", void 0);\n\n    _this.columns = [{\n      dataField: 'site',\n      text: 'Site'\n    }, {\n      dataField: 'views',\n      text: 'Consultation'\n    }, {\n      dataField: 'apply',\n      text: 'Candidature'\n    }, {\n      dataField: 'completed',\n      text: 'Candidatures finalisÃ©es'\n    }, {\n      dataField: 'interview',\n      text: 'Entretien'\n    }, {\n      dataField: 'hiring',\n      text: 'Embauche'\n    }];\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(CostTableStats, [{\n    key: \"compute\",\n    value: function compute() {\n      var displayStartYear = this.props.app.state.mrange.from.year,\n          displayStartMonth = this.props.app.state.mrange.from.month,\n          displayEndYear = this.props.app.state.mrange.to.year,\n          displayEndMonth = this.props.app.state.mrange.to.month,\n          intDisplayStartDate = parseInt(displayStartYear + displayStartMonth, 10),\n          intDisplayEndDate = parseInt(displayEndYear + displayEndMonth, 10),\n          intCe = 0,\n          finalArr = [],\n          contracts = this.props.app.state.setofbudjet.length !== 0 ? this.props.app.state.setofbudjet : this.context.subscribtions.subscribtions,\n          apiMoneySpend = 0,\n          oneDay = 24 * 60 * 60 * 1000,\n          contractBegin = null,\n          contractEnd = null,\n          quantity = 0,\n          budgetByDay = 0,\n          budget = 0,\n          obj = {\n        start: \"\",\n        end: \"\",\n        site: \"-\",\n        views: \"-\",\n        apply: \"-\",\n        completed: \"-\",\n        interview: \"-\",\n        hiring: \"-\"\n      },\n          dataNbOfAnnoncePublished = 0,\n          views = 0,\n          apply = 0,\n          completed = 0,\n          entretien = 0,\n          hired = 0,\n          sum = 0,\n          k = 0,\n          i = 0,\n          j = 0,\n          b = 0,\n          c = 0,\n          m = 0,\n          contractToAnalyse = [],\n          contractToDisplay = [],\n          contractsIntoPeriod = [];\n      /*console.log(this.props.app.state.setofbudjet);\r\n        console.log(this.context.subscribtions.subscribtions);*/\n\n      /* Loop on all the contracts in order to remove the contracts which are not in the selected client period\r\n         The time gap between the end of the contract and the display end date is computed into the contractToAnalyse array\r\n      */\n\n      if (contracts !== null && contracts.length !== 0) {\n        for (b = 0; b < contracts.length; b++) {\n          //console.log(new Date(contracts[b].Debut).getTime() !== new Date(contracts[b].Fin).getTime());\n          if (new Date(contracts[b].Debut).getTime() < new Date(contracts[b].Fin).getTime() && contracts[b].Montant) {\n            contractsIntoPeriod.push(contracts[b]);\n          }\n        }\n\n        for (i = 0; i < this.props.app.state.serverNames.length; i++) {\n          //console.log(this.props.state.serverNames[i][0].toUpperCase());\n          for (c = 0; c < contractsIntoPeriod.length; c++) {\n            //console.log(contractsIntoPeriod[c].Site.toUpperCase());\n            if (contractsIntoPeriod[c].Site.toUpperCase() === this.props.app.state.serverNames[i][0].toUpperCase()) {\n              var ceDate = new Date(contractsIntoPeriod[c].Fin);\n              intCe = parseInt(ceDate.getFullYear().toString() + ceDate.getMonth().toString(), 10); //console.log(intCe);\n              //console.log(intDisplayEndDate);\n\n              contractToAnalyse.push([contractsIntoPeriod[c], Math.abs(intCe - intDisplayEndDate)]);\n            }\n          }\n        } //console.log( contractToAnalyse );\n\n\n        if (contractToAnalyse.length !== 0) {\n          var arrOfTimesAndNames = [],\n              arrOfTimes = [],\n              arrOfValSorted = [];\n          /** Let push all the time and support contract name computed into the contractToAnalyse into the arrOfTimesAndNames */\n\n          for (b = 0; b < contractToAnalyse.length; b++) {\n            for (i = 0; i < this.props.app.state.serverNames.length; i++) {\n              if (contractToAnalyse[b] !== undefined && contractToAnalyse[b][0] !== undefined && contractToAnalyse[b][0].Site.toUpperCase() === this.props.app.state.serverNames[i][0].toUpperCase()) {\n                arrOfTimesAndNames.push([contractToAnalyse[b][1], this.props.app.state.serverNames[i][0]]);\n              }\n            }\n          }\n          /** Let push all the time computed into the contractToAnalyse into the arrOfTimes in order to find the minimum value for a specific support */\n\n\n          for (i = 0; i < this.props.app.state.serverNames.length; i++) {\n            arrOfTimes = [];\n\n            for (k = 0; k < arrOfTimesAndNames.length; k++) {\n              if (arrOfTimesAndNames[k][1].toUpperCase() === this.props.app.state.serverNames[i][0].toUpperCase()) {\n                arrOfTimes.push(arrOfTimesAndNames[k][0]);\n              }\n            }\n\n            arrOfValSorted.push([Math.min.apply(Math, Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arrOfTimes)), this.props.app.state.serverNames[i][0]]);\n          }\n\n          for (b = 0; b < contractToAnalyse.length; b++) {\n            for (k = 0; k < arrOfValSorted.length; k++) {\n              if (contractToAnalyse[b][1] === arrOfValSorted[k][0] && arrOfValSorted[k][1].toUpperCase() === contractToAnalyse[b][0].Site.toUpperCase()) {\n                contractToDisplay.push(contractToAnalyse[b]);\n              }\n            }\n          }\n        }\n      }\n\n      for (var site in this.props.dataBySupportNotFiltered) {\n        //console.log(site);\n\n        /** Let compute the support budget cost of type 1 example : Indeed */\n        if (displayStartYear === displayEndYear) {\n          for (m = displayStartMonth; m <= displayEndMonth; m++) {\n            if (this.props.siteCostType !== null && this.props.siteCostType[site] === 1) {\n              apiMoneySpend = 0;\n              var supportData = this.props.dataByMontAndBySupport[site];\n\n              if (supportData !== undefined) {\n                for (j = 0; j < supportData.length; j++) {\n                  var line = supportData[j];\n\n                  for (var property in line) {\n                    if (Array.isArray(line[property]) && property.includes(\"cost\")) {\n                      for (i = 0; i < line[property].length; i++) {\n                        apiMoneySpend += line[property][i].value;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          for (m = displayStartMonth; m <= 12; m++) {\n            if (this.props.siteCostType !== null && this.props.siteCostType[site] === 1) {\n              apiMoneySpend = 0;\n              var _supportData = this.props.dataByMontAndBySupport[site];\n\n              if (_supportData !== undefined) {\n                for (j = 0; j < _supportData.length; j++) {\n                  var _line = _supportData[j];\n\n                  for (var _property in _line) {\n                    if (Array.isArray(_line[_property]) && _property.includes(\"cost\")) {\n                      for (i = 0; i < _line[_property].length; i++) {\n                        apiMoneySpend += _line[_property][i].value;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          for (m = 1; m <= displayEndMonth; m++) {\n            if (this.props.siteCostType !== null && this.props.siteCostType[site] === 1) {\n              apiMoneySpend = 0;\n              var _supportData2 = this.props.dataByMontAndBySupport[site];\n\n              if (_supportData2 !== undefined) {\n                for (j = 0; j < _supportData2.length; j++) {\n                  var _line2 = _supportData2[j];\n\n                  for (var _property2 in _line2) {\n                    if (Array.isArray(_line2[_property2]) && _property2.includes(\"cost\")) {\n                      for (i = 0; i < _line2[_property2].length; i++) {\n                        apiMoneySpend += _line2[_property2][i].value;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (this.props.dataBySupportNotFiltered[site][0].SupportType !== \"Site CarriÃ¨re\") {\n          /* API data */\n          if (this.props.siteCostType !== null && this.props.siteCostType[site] === 1) {\n            var _obj = {},\n                APIData = this.props.dataByMontAndBySupport[site],\n                _views = 0,\n                _apply = 0,\n                _completed = 0,\n                _entretien = 0,\n                _hired = 0; //console.log(APIData);\n\n            if (APIData !== undefined) {\n              for (j = 0; j < APIData.length; j++) {\n                var _line3 = APIData[j];\n                sum = 0;\n\n                for (c = 0; c < _line3[\"consultation\"].length; c++) {\n                  sum += _line3[\"consultation\"][c].value;\n                  _views += _line3[\"consultation\"][c].value;\n                  _apply += _line3[\"apply\"][c].value;\n                  _completed += _line3[\"completed\"][c].value;\n                  _hired += _line3[\"hired\"][c].value;\n                  _entretien += _line3[\"entretien\"][c].value;\n                }\n              }\n            }\n\n            console.log(apiMoneySpend);\n            /*console.log(views);*/\n\n            _obj = {\n              site: site.toUpperCase(),\n              views: _views !== 0 ? (apiMoneySpend / _views).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n              apply: _apply !== 0 ? (apiMoneySpend / _apply).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n              completed: _completed !== 0 ? (apiMoneySpend / _completed).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n              interview: _entretien !== 0 ? (apiMoneySpend / _hired).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n              hiring: _hired !== 0 ? (apiMoneySpend / _entretien).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\"\n            };\n            finalArr.push(_obj);\n          }\n\n          for (b = 0; b < contractToDisplay.length; b++) {\n            contractBegin = new Date(contractToDisplay[b][0].Debut);\n            contractEnd = new Date(contractToDisplay[b][0].Fin);\n            var filteredDataForOneSupport = [],\n                dataForOneSupport = [];\n            /*console.log(contractToDisplay[b][0]);\r\n            console.log(site.toUpperCase());*/\n\n            if (contractToDisplay[b][0].Site.toUpperCase() === site.toUpperCase()) {\n              filteredDataForOneSupport = retrieveAnnonceBetwnTwoDate(contractBegin, contractEnd, this.props.dataByMontAndBySupport[site]);\n              dataForOneSupport = retrieveAnnonceBetwnTwoDate(contractBegin, contractEnd, this.props.dataBySupportNotFiltered[site]);\n              quantity = -1;\n              views = 0;\n              apply = 0;\n              completed = 0;\n              entretien = 0;\n              hired = 0;\n              sum = 0;\n              /** Let computes the contract budget according to the contract subscription */\n\n              if (contractToDisplay[b][0].Quantite !== -1) {\n                quantity = contractToDisplay[b][0].Quantite !== null ? contractToDisplay[b][0].Quantite : 0;\n                budget = contractToDisplay[b][0].Montant !== null ? contractToDisplay[b][0].Montant : 0;\n              } else {\n                budgetByDay = contractToDisplay[b][0].Montant / (Math.abs(contractBegin.getTime() - contractEnd.getTime()) / oneDay);\n                budget = Math.abs(contractBegin.getTime() - new Date().getTime()) / oneDay * budgetByDay;\n\n                for (j = 0; j < dataForOneSupport.length; j++) {\n                  var _line4 = dataForOneSupport[j];\n                  sum = 0; //console.log(dataForOneSupport[j]);\n                  //if( line[\"consultation\"] !== undefined ){\n\n                  for (c = 0; c < _line4[\"Ordinateur\"][\"consultation\"].length; c++) {\n                    sum += _line4[\"Ordinateur\"][\"consultation\"][c].value;\n                  }\n\n                  for (c = 0; c < _line4[\"Mobile\"][\"consultation\"].length; c++) {\n                    sum += _line4[\"Mobile\"][\"consultation\"][c].value;\n                  } //}\n\n\n                  if (sum >= 0) {\n                    dataNbOfAnnoncePublished++;\n                  }\n                }\n              }\n\n              for (j = 0; j < filteredDataForOneSupport.length; j++) {\n                var _line5 = filteredDataForOneSupport[j];\n                sum = 0;\n\n                for (c = 0; c < _line5[\"consultation\"].length; c++) {\n                  sum += _line5[\"consultation\"][c].value;\n                  views += _line5[\"consultation\"][c].value;\n                  apply += _line5[\"apply\"][c].value;\n                  completed += _line5[\"completed\"][c].value;\n                  hired += _line5[\"hired\"][c].value;\n                  entretien += _line5[\"entretien\"][c].value;\n                }\n              }\n              /** According to the contract subscription */\n\n\n              var nbAnnonceSinceBeginContract = filteredDataForOneSupport.length; //console.log(site);\n              //console.log(this.props.siteCostType);\n\n              /*console.log(budget);\r\n               console.log(quantity);\r\n               console.log(nbAnnonceSinceBeginContract);*/\n\n              quantity = quantity === 0 ? 1 : quantity;\n\n              if (quantity !== -1) {\n                /*console.log(site);\r\n                console.log(\"nb annonce filtered since begin contract ==>\" + nbAnnonceSinceBeginContract);\r\n                console.log(\"montant ==>\" + budget);\r\n                console.log(\"quantitÃ© ==>\" + quantity);\r\n                console.log(\"vues ==>\" + views);\r\n                console.log(\"apply ==>\" + apply);*/\n                obj = {\n                  start: contractBegin,\n                  end: contractEnd,\n                  site: site.toUpperCase(),\n                  views: views !== 0 ? (nbAnnonceSinceBeginContract * budget / (quantity * views)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  apply: apply !== 0 ? (nbAnnonceSinceBeginContract * budget / (quantity * apply)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  completed: completed !== 0 ? (nbAnnonceSinceBeginContract * budget / (quantity * completed)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  interview: entretien !== 0 ? (nbAnnonceSinceBeginContract * budget / (quantity * entretien)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  hiring: hired !== 0 ? (nbAnnonceSinceBeginContract * budget / (quantity * hired)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\"\n                };\n              } else {\n                /*console.log(site);\r\n                console.log(\"nb annonce not filtered since begin contract ==>\" + dataNbOfAnnoncePublished );\r\n                console.log(\"annonce filtered since begin contract ==>\" + nbAnnonceSinceBeginContract );\r\n                console.log(\"budget ==>\" + budget);\r\n                console.log(\"vues ==>\" + views);\r\n                console.log(\"apply ==>\" + apply);\r\n                console.log(\"entretien ==>\" + entretien);\r\n                console.log(\"completed ==>\" + completed);\r\n                console.log(\"hired ==>\" + hired);*/\n                obj = {\n                  start: contractBegin,\n                  end: contractEnd,\n                  site: site.toUpperCase(),\n                  views: views !== 0 ? (budget * nbAnnonceSinceBeginContract / (views * dataNbOfAnnoncePublished)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  apply: apply !== 0 ? (budget * nbAnnonceSinceBeginContract / (apply * dataNbOfAnnoncePublished)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  completed: completed !== 0 ? (budget * nbAnnonceSinceBeginContract / (completed * dataNbOfAnnoncePublished)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  interview: entretien !== 0 ? (budget * nbAnnonceSinceBeginContract / (entretien * dataNbOfAnnoncePublished)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\",\n                  hiring: hired !== 0 ? (budget * nbAnnonceSinceBeginContract / (hired * dataNbOfAnnoncePublished)).toFixed(2).toString().replace(\".\", \",\") + \" â¬\" : \"-\"\n                };\n              } //console.log(obj)\n\n\n              finalArr.push(obj);\n            }\n          }\n        }\n      }\n\n      return finalArr;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 7\n        }\n      }, __jsx(react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_11___default.a, {\n        keyField: \"site\",\n        data: this.compute(),\n        columns: this.columns,\n        exportCSV: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }\n      }, function (props) {\n        return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }\n        }, __jsx(\"div\", {\n          className: _styles_module_css__WEBPACK_IMPORTED_MODULE_13___default.a.ddtable,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }\n        }, __jsx(react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_10___default.a, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n          keyField: \"site\"\n        }, props.baseProps, {\n          bordered: false,\n          hover: true,\n          striped: true,\n          noDataIndication: \"Absence de donn\\xE9es\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 19\n          }\n        }))), __jsx(ExportCSVButton, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n          className: _styles_module_css__WEBPACK_IMPORTED_MODULE_13___default.a.csvExportBtn\n        }, props.csvProps, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }\n        }), \"Exporter en CSV \"));\n      }));\n    }\n  }]);\n\n  return CostTableStats;\n}(react__WEBPACK_IMPORTED_MODULE_9___default.a.PureComponent);\n\nObject(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(CostTableStats, \"contextType\", _context_User__WEBPACK_IMPORTED_MODULE_12__[\"default\"]);\n\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./shared/statistics/table/CostTableStats.tsx\n");

/***/ })

})